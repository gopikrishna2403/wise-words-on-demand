name: Webapp CI

on:
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'app_factory.py'
      - 'app/**'
      - 'config.py'
      - 'test_app.py'
      - 'requirements*.txt'
      - '.github/workflows/webapp-ci.yml'
  push:
    branches: [ main ]
    paths:
      - 'app_factory.py'
      - 'app/**'
      - 'config.py'
      - 'test_app.py'
      - 'requirements*.txt'
      - '.github/workflows/webapp-ci.yml'

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install flake8

    - name: Run linting
      run: |
        flake8 app_factory.py app/ config.py test_app.py --max-line-length=100 --exclude=venv

  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Build and compile app
      run: |
        echo "Building Flask application..."
        python -c "
        from app_factory import create_app
        app = create_app()
        print('✅ Flask app created successfully')
        print(f'App name: {app.name}')
        print(f'Debug mode: {app.debug}')
        print('✅ App build completed successfully')
        "

  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ['3.12']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-test.txt

    - name: Run tests
      run: |
        python -m pytest test_app.py -v --tb=short

    - name: Test app factory
      run: |
        python -c "from app_factory import create_app; app = create_app(); print('App factory test passed')"
